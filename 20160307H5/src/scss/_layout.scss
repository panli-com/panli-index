@mixin font-dpr($font-size){
    font-size: $font-size;

    [data-dpr="2"] & {
        font-size: $font-size * 2;
    }

    [data-dpr="3"] & {
        font-size: $font-size * 3;
    }
}


@mixin px2rem($property,$px-values,$baseline-px:16px,$support-for-ie:false){
//Conver the baseline into rems
$baseline-rem: $baseline-px / 1rem * 1;
//Print the first line in pixel values
@if $support-for-ie {
    #{$property}: $px-values;
}
//if there is only one (numeric) value, return the property/value line for it.
@if type-of($px-values) == "number"{
    #{$property}: $px-values / $baseline-rem;
}
@else {
    //Create an empty list that we can dump values into
    $rem-values:();
    @each $value in $px-values{
        // If the value is zero or not a number, return it
        @if $value == 0 or type-of($value) != "number"{
            $rem-values: append($rem-values, $value / $baseline-rem);
        }
    }
    // Return the property and its list of converted values
    #{$property}: $rem-values;
}
}

$browser-default-font-size:72;

@function pxTorem($px){//$px为需要转换的字号
    @return $px / $browser-default-font-size * 1rem;
}

@mixin backImg($src){
    background-repeat: no-repeat;
    background-image: url($src);
    background-size: contain;
}



.app,.layer-none{  
  min-width: 320px;
  max-width: 720px;
  margin: 0 auto;
  overflow: hidden;
  font-size: 12px;
  img{
    max-width: 100%;
  }
}
.mg-lf-rem-25{
   margin-left: 0.25rem;
   margin-right: 0.25rem;
}
.mg-lf-rem-05{
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mg-lf-rem-1{
  margin-left: 1rem;
  margin-right: 1rem;
}
.pd-lr-rem-1{
  padding-left: 1rem;
  padding-right: 1rem;
}
.pd-lr-rem-05{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.pd-tb-rem-05{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.pd-rem-05{
  padding: 0.5rem;
}
